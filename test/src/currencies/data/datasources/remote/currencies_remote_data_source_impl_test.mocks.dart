// Mocks generated by Mockito 5.4.6 from annotations
// in x_transfer/test/src/currencies/data/datasources/remote/currencies_remote_data_source_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:x_transfer/core/common/enums/response_type_enum.dart' as _i5;
import 'package:x_transfer/core/util/network_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i3.NetworkService {
  MockNetworkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response<dynamic>> get(
    String? url, {
    Map<String, dynamic>? queryParams,
    Map<String, dynamic>? headers,
    _i5.ResponseTypeEnum? responseType,
    String? baseUrl,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [url],
              {
                #queryParams: queryParams,
                #headers: headers,
                #responseType: responseType,
                #baseUrl: baseUrl,
              },
            ),
            returnValue: _i4.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(
                  #get,
                  [url],
                  {
                    #queryParams: queryParams,
                    #headers: headers,
                    #responseType: responseType,
                    #baseUrl: baseUrl,
                  },
                ),
              ),
            ),
          )
          as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> post(
    String? url,
    dynamic data, {
    Map<String, dynamic>? queryParams,
    Map<String, dynamic>? headers,
    _i5.ResponseTypeEnum? responseType,
    String? baseUrl,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url, data],
              {
                #queryParams: queryParams,
                #headers: headers,
                #responseType: responseType,
                #baseUrl: baseUrl,
              },
            ),
            returnValue: _i4.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(
                  #post,
                  [url, data],
                  {
                    #queryParams: queryParams,
                    #headers: headers,
                    #responseType: responseType,
                    #baseUrl: baseUrl,
                  },
                ),
              ),
            ),
          )
          as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> delete(
    String? url, {
    dynamic data,
    Map<String, dynamic>? queryParams,
    Map<String, dynamic>? headers,
    String? baseUrl,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {
                #data: data,
                #queryParams: queryParams,
                #headers: headers,
                #baseUrl: baseUrl,
              },
            ),
            returnValue: _i4.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {
                    #data: data,
                    #queryParams: queryParams,
                    #headers: headers,
                    #baseUrl: baseUrl,
                  },
                ),
              ),
            ),
          )
          as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> put(
    String? url,
    dynamic data, {
    Map<String, dynamic>? headers,
    String? baseUrl,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url, data],
              {#headers: headers, #baseUrl: baseUrl},
            ),
            returnValue: _i4.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(
                  #put,
                  [url, data],
                  {#headers: headers, #baseUrl: baseUrl},
                ),
              ),
            ),
          )
          as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> download(
    String? url,
    dynamic savePath, {
    Map<String, dynamic>? headers,
    dynamic data,
    String? baseUrl,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #download,
              [url, savePath],
              {#headers: headers, #data: data, #baseUrl: baseUrl},
            ),
            returnValue: _i4.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(
                  #download,
                  [url, savePath],
                  {#headers: headers, #data: data, #baseUrl: baseUrl},
                ),
              ),
            ),
          )
          as _i4.Future<_i2.Response<dynamic>>);

  @override
  dynamic removeValueFromHeader({required String? key}) => super.noSuchMethod(
    Invocation.method(#removeValueFromHeader, [], {#key: key}),
  );

  @override
  dynamic setValueToHeader({required String? key, required String? value}) =>
      super.noSuchMethod(
        Invocation.method(#setValueToHeader, [], {#key: key, #value: value}),
      );
}
